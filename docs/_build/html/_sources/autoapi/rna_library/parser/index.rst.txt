:mod:`rna_library.parser`
=========================

.. py:module:: rna_library.parser


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rna_library.parser.helix_length
   rna_library.parser.get_junction_or_hairpin
   rna_library.parser.get_helix
   rna_library.parser.get_singlestrand
   rna_library.parser.get_motifs
   rna_library.parser.parse_to_motifs


.. function:: helix_length(connections: List[int], start: int) -> int

   TODO


.. function:: get_junction_or_hairpin(sequence: str, connections: List[int], start: int) -> Union[Junction, Hairpin]

   TODO


.. function:: get_helix(sequence: str, connections: List[int], start: int) -> Union[Hairpin, Helix, Junction, SingleStrand]

   TODO


.. function:: get_singlestrand(sequence: str, connections: List[int], start: int) -> SingleStrand

   TODO


.. function:: get_motifs(sequence: str, connections: List[int], start: int) -> Union[Helix, SingleStrand]

   Helper method


.. function:: parse_to_motifs(structure: str, sequence: str) -> Motif

   Method takes a structure sequence pair and returns a root :class:`Motif()` with a complete associated graph.

   :param str structure: a valid dot-bracket structure 
   :param str sequence: the corresponding sequence composed of the alphabet [ACGUTNB] 

   :return: motif
   :rtype: Motif


