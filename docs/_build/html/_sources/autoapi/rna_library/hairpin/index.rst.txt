:mod:`rna_library.hairpin`
==========================

.. py:module:: rna_library.hairpin


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rna_library.hairpin.Hairpin




.. class:: Hairpin(**kwargs)


   Bases: :py:obj:`rna_library.motif.Motif`

   .. autoapi-inheritance-diagram:: rna_library.hairpin.Hairpin
      :parts: 1
      :private-bases:

   Represents a hairpin loop in an RNA structure. Inherits from :class:`Motif()`.

   .. method:: buffer(self)

      For the :class:`Hairpin()` type, this is simply the size of the 
      closing helix meaning the number of closing pairs.

      :return: buffer
      :rtype: int


   .. method:: is_hairpin(self)

      Indicates that the :class:`Motif()` is of type :class:`Hairpin()`.

      :return: is_hairpin
      :rtype: bool


   .. method:: recursive_structure(self)

      Returns the owned portion of the structure. In this coding of structure 
      it is just the loop portion and does not include the closing pair.

      :return: recursive_structure
      :rtype: str


   .. method:: recursive_sequence(self)

      Returns the owned portion of the sequence. In this coding of sequence 
      it is just the loop portion and does not include the closing pair.

      :return: recursive_sequence
      :rtype: str


   .. method:: has_non_canonical(self)

      Returns whether or not the closing pair is canonical (i.e. is AU/UA, CG/GC, GU/UG).

      :return: has_non_canonical
      :rtype: bool


   .. method:: generate_sequences(self)

      Generates all possible sequences for the :class:`Hairpin()` that are compatible with
      the constraints for the motif.



